     default_random_engine generator;
     uniform_real_distribution<double> distribution(0.0,1.0);
     exponential_distribution<double> expdistribution(0.2928552*0.19276571); // Correct for length 3

     //#pragma omp for reduction(+:MCint,MCintsqr2) private(i)
     // Ny Monte Carlo
     N = 100000;
     double *y = new double [N];
     double *z = new double [N];
     double fx;
     double fx_exp;
     double length = 3;
     double jacobidet = pow((2*length),6);

     // importance sampling
     for(int i=1;i<=N;i++)
     {
         for(int j=0;j<6;j++){
             y[j] = -length + 2*length*distribution(generator);
             z[j] = expdistribution(generator);
         }
         fx = int_function(y[0],y[1],y[2],y[3],y[4],y[5]);
         fx_exp = int_function_spherical(z[0],z[1],M_PI*z[2],M_PI*z[3],2*M_PI*z[4],2*M_PI*z[5]);
         MCint += fx_exp;
         MCintsqr2 += fx_exp*fx_exp;
     }
     MCint = jacobidet*MCint/((double) N);
     MCintsqr2 = MCintsqr2/((double) N);
     double variance = MCintsqr2 - MCint*MCint;
